name: Build and Deploy

env: 
  GO_URL: https://github.com/Viasat/Viasat-NetworkTrafficMeter.git

on:
  push:
    branches:
      - master

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21.x 

    - name: Checkout Code
      run: git clone ${{env.GO_URL}} backend
       
    - name: Install pcap
      run: sudo apt-get install libpcap-dev

    - name: Build
      run: cd backend/go-backend/go && go build -o NetworkTrafficBackend.exe .

    - name: Archive Artifact
      uses: actions/upload-artifact@v2
      with:
        name: backend
        path: ./backend/go-backend/go/NetworkTrafficBackend.exe 
    
  build:
    runs-on: windows-latest
    needs: [build-backend]
    env:
      GH_TOKEN: ${{ github.token }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: backend
    
      - name: Install Node.js and npm
        uses: actions/setup-node@v2
        with:
          node-version: 18
    
      - name: Install dependencies
        run: npm install
    
      - name: Build for production
        run: npm run build:prod

      - name: Moves backend to main folder
        run: mv ./NetworkTrafficBackend.exe ./packages/main

      - name: Compile
        run: npm run compile:win
        
      - name: Compact folder
        run: Compress-Archive -Path ./dist/"Viasat Network Traffic Metter.exe" -Destination NetworkTrafficMetter.zip

      - name: Save UI artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ViasatNetworkMetter
          path: ./NetworkTrafficMetter.zip

  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@master
      
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: ViasatNetworkMetter

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: Release ${{ github.run_number }}
        tag_name: V${{ github.run_number }}
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload Windows Artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./NetworkTrafficMetter.zip
        asset_name: NetworkTrafficMetter.zip
        asset_content_type: application/zip
